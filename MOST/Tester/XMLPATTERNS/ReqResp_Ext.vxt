<?xml version="1.0" encoding="iso-8859-1"?>
<!--Vector Test Automation Editor 1.1.55.0-->
<testmodule title="Extended Request/Response" version="Version" xmlns="http://www.vector-informatik.de/CANoe/TestModule/1.16">
  <sut>
    <info>
      <name>MOST Audio Device</name>
      <description>This is just a demo test specification that serves as an example.</description>
    </info>
  </sut>
  <engineer>
    <info>
      <name>Name</name>
      <description>Department</description>
    </info>
    <info>
      <name>Company</name>
      <description>Location</description>
    </info>
  </engineer>
  <testsetup>
    <info>
      <name>Extended Request/Response pattern</name>
      <description>
        In contrast to it's earlier version, the request and response blocks may now contain multiple message or environment variable value definitions. The request block's definitions are processed in their written-down sequence with a time interval (given by the "sendinterval" attribute) between each action. Multiple definitions in the response block are not ordered in any way, but joined by the logical condition attribute. Thus, similar expressions to the ones using the joined condition functions of the Test Feature Set can be formed.
      </description>
    </info>
  </testsetup>
  <testgroup title="A collection of tests for the extended Request/Response patterns">
    <testcase ident="1" title="Test of Notification service">
      <requestresponse title="Extended Request/Response test pattern" timeout="1000">
        <request>
          <mostmsg name="AudioDiskPlayer.1.Notification.Set" channel="1" sa="0x100" da="0x101" ams="ams" spy="node">
            <param name="Control">SetFunction</param>
            <param name="DeviceId">0x0100</param>
            <param name="FktIDList.FktID[1]">0x201</param>
            <param name="FktIDList.FktID[2]">0x202</param>
          </mostmsg>
        </request>
        <response joincondition="and">
          <mostmsg name="AudioDiskPlayer.1.TrackPosition.Status" channel="1" sa="0x101" da="0x100" ams="ams" spy="node" />
          <mostmsg name="AudioDiskPlayer.1.TimePosition.Status" channel="1" sa="0x101" da="0x100" ams="ams" spy="node" />
        </response>
      </requestresponse>
      <wait time="100" title="" />
      <initialize title="Clear notifications">
        <mostmsg name="AudioDiskPlayer.1.Notification.Set" channel="1" sa="0x100" da="0x101" ams="ams" spy="node">
          <param name="Control">ClearFunction</param>
          <param name="DeviceId">0x0100</param>
          <param name="FktIDList.FktID[1]">0x201</param>
          <param name="FktIDList.FktID[2]">0x202</param>
        </mostmsg>
      </initialize>
    </testcase>
    <testcase ident="2" title="Test of MediaInfo function">
      <requestresponse title="Extended Request/Response test pattern" mintime="0" timeout="2000">
        <request sendinterval="100">
          <mostmsg name="AudioDiskPlayer.1.MediaInfo.Get" channel="1" tellen="2" sa="0x100" da="0x101" ams="ams" spy="node">
            <param name="Pos">0x0000</param>
          </mostmsg>
        </request>
        <response>
          <mostmsg name="AudioDiskPlayer.1.MediaInfo.Status" channel="1" sa="0x101" da="0x100" ams="ams" spy="node">
            <param name="Data.Record[1].MediaType">Audio</param>
          </mostmsg>
        </response>
      </requestresponse>
    </testcase>
  </testgroup>
</testmodule>