MOST High Protocol Demo Configuration
========================

Purpose:
----------
This configuration demonstrates the transmission of user data between 
MOST devices using the High Protocol service.
In order to work, the "Exec32" directory of the configuration's folder must 
contain the file "MOST_MHP.dll", which is the node layer DLL that implements 
the protocol.

Furthermore, the MOST High Protocol Observer of CANoe is showcased here.
It provides additional events for High Protocol blocks and packets, and it
generates error events whenever a situation is detected that is not conform 
to the High Protocol Specification Rev 2.2. The High Protocol packet event 
contains the data of the transmitted packet and is also shown disassembled, 
if the function catalog contains the corresponding structure information (see
"File:" under "Usage"). 

The configuration contains two nodes and their corresponding
receiver and sender panels representing the two devices, which are each 
connected to different channels. The channels are connected to a virtual 
MOST ring (if not, activate the checkbox in Options->Simulation).

Regular Usage
-----------------
Single packet:

For a quick run of the demo, put some text inside the hex editor of panel 
"Sender_A" and press the "Send" button or input the number of bytes to
be transmitted (<= 65536) in the edit box to the left of the "Fill&Send" 
button and press "Fill&Send" to start the transmission. 
Both nodes have the same functionality and can be used as sender or 
receiver. You can switch between sender and receiver panels of a node via 
the button in the right upper corner.

File:

You can also use the demo to transmit a file over MOST High Protocol by 
switching the radio button inside "Tx Data Buffer" from "Single packet" 
to "File". Select the file by clicking on the file button to the right of
the edit box. The path of the selected file name will appear in the edit box of the panel. 
The same steps must be performed on the receiver's panel, if the 
received user data should be written into a file. 

The demo is prepared to showcase the disassembly of packet data. For 
this, use "Sender_B" to send the file "Phonebook.txt", which can be found
in the configuration's folder. The functional address initially set in this 
panel as a target address corresponds to the 
"VectorPhoneBook.Phonebook.Status" definition in the function catalog.
This address is also set initially in the "Receiver_A" panel as "My address".
After the file was transmitted completely, you can view the disassembled
data by folding out the MHPPacket event in the trace window. 

Transmission parameters:

The button "Settings" opens another panel that allows setting further 
transmission parameters:

In "Tx options", you can set the parameters that the sender uses for 
requesting a connection such as the used channel type, the number of bytes 
per frame, the acknowledge type and the priority. 

In "Rx options", you can specify the capacity of the receiver by setting the
number of frames per block, the number of bytes per frame, the Average 
Interrupt Rate (AIR) and the priority that a connection request must at 
least have in order to be accepted by the receiver. 
Note that since bytes per frame times frames per block must not exceed 65536 
bytes, a explicit "Set" action is required for setting the Rx parameters and 
to perform this consistency check. If you don't set the Rx parameters, the 
receiver's capacity uses maximum values for packet transmission and 
automatically downscales to the sender's requested frame size. Vice versa, a 
frame size explicitly set in the Rx options limits the requested frame size.

During a running transmission, you can activate cyclic sending of HOLD 
CONNECTION TX / RX commands by activating the checkbox in "Hold" on the right 
lower corner of the sender or receiver panel.

*****************************************************************
For a comprehensive documentation of the High Protocol Nodelayer DLL, read the
document "MHP_NodeLayer_Doc.PDF", which can found in the folder 
"Documentation" of this demo configuration.
*****************************************************************
--------------------------------------------------------------------------------------------------
Copyright(c) by Vector Informatik GmbH Dep. Tools Automotive 2012