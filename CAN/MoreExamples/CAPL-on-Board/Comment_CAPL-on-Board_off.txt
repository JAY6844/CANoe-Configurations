Goal of the demos:
==================
This pair of demos shows the improved real time capabilities of the Vector CAPLonBoard feature in comparison to the normal execution mode:
- more accurate timers / reduced jitter
- shorter response times / lower latency

Requirements and preparation:
=============================
The configurations require a network interface which supports the Vector CAPL-on-Board feature with two CAN channels (e.g. VN1630, VN1640, …).  Channel 1 has to be connected with channel 2 using a CANcable1.

Description of the functionality:
=================================
A CAPL node cyclically transmits a CAN message with ID 0x100 each 1 millisecond. Another CAPL node receives the cyclic message and immediately transmits a response message with ID 0x102. The cycle time is calculated as difference of the reception timestamps of two consecutive messages with ID 0x100. The response time is calculated as difference between the transmission timestamp of a message with ID 0x100 and the start of frame timestamp of the corresponding message with ID 0x102.
The Demo also shows off the improved accuracy of the timers available to CAPL nodes when running on the interface hardware.
The Demo consist of a pair of configuration which are identical, except that CAPL-on-Board_on.cfg uses CAPLonBoard for all nodes, whereas CAPL-on-Board_off.cfg executes the CAPL code on the PC.

Graphic windows:
================
The “Cycle Times” graphics shows the calculated current cycle time and the minimum and maximum over the whole measurement.
The “Response Times” graphics shows the calculated current response time and the minimum and maximum over the whole measurement.
The yellow lines show the current cycle and reponse time for each CAN frame, whereas the red lines show the minimum and maximum values for the cycle and reponse times, respectively.
In CAPL-on-Board_off.cfg, the influence of the Windows operating system is clearly visible (even though the CAPL code gets executed with elevated priority).
In comparison, in In CAPL-on-Board_on.cfg, the reponse times are lots shorter, and there is almost no jitter visible at all.

*******************************************************************
A detailed description can be found in the online help (see example configurations
in the table of contents).
*******************************************************************
-----------------------------------------------------------------------------------------------------
Copyright (c) by Vector Informatik GmbH Dep. Tools Automotive  2011
-----------------------------------------------------------------------------------------------------