SENTExample
The sample configuration "SENTExample.cfg" shows the usage of the Option.Sensor and the VT2710 module. Channel 1 simulates a SENT ECU, Channel 2 simulates a SENT sensor. A signal "RollingCounter" is exchanged from the sensor to the ECU via the SENT protocol. The value of this signal incremented from 0 to 255 on everey transmittion by one and than restarts with 0. This example demonstrates the usage of the VT2710 modul and shows the data transmission via the SENT protocol. The incrementation of the signal value is done by a CAPL program. The CAPL-program shows how to change sensor signals with CAPL-commands. 

Setting up the Hardware
The "Setting up the Hardware" page explains how to set up an existing VT Rack in order to use it with the sample configuration.
In the sample configuration "SENTExample.cfg" the data are transfered via the SENT protocol between channel 1 and channel 2. Therefore the signal lines have to be connected to transfer the data. The Pin 7 Sensor+1 von PSI5SENTpiggy Connector 1 have to be connected with Pin 9 ECU+2 PSI5SENTpiggy Connector 2 and Pin 6 Sensor-1 PSI5SENTpiggy Connector 1 have to be connected with Pin 8 ECU-2 PSI5SENTpiggy Connector 2. There must be also a connection from Pin 10 SENT VDD1 von PSI5SENTpiggy Connector 1 to Pin 10 SENT VDD2 von PSI5SENTpiggy Connector 2.

Running the sample configuration
Executing the sample configuration the window "Grafik" displays the changing values of the signal value in the shape of a sawtooth. The data SENSORSIM::Sensor::Signals::RollingCounter are transmitted from the simulated sensor and the data ECUSIM::Sensor:Signals::RollingCounter are received from the simulated ECU. The window "Data" shows the current values of the signals. The window "Trace" shows and stores the SENT protocol. If the execution of the sample configuration is stopped, the protocol data can be analysed using the stored data of the "Trace" window. The window "Write" shows informations of the execution of the sample configurtion. If there are errors, executing the configuration, these are shown in the window "Trace".

Meaning of the VT2710 module LEDs 
Executing the sample configuration the VT2710 module activates the following LEDs:
PSI5/SENT 1
LED SENT flashes: Data are transfered using the SENT protocol.
LED ECU lighted: A ECU is simulated.

PSI5/SENT 2
LED SENT flashes: Data are transfered using the SENT protocol.
LED Sens. lighted: A Sensor is simulated.

Error messages

Error 1
System	Sensor: No matching hardware interface was found for sensor channel "ECUSIM".
System	Sensor: No matching hardware interface was found for sensor channel "SENSORSIM".

Meaning of Error 1
If this error is shown, the VT-System is not activated. You can activate the VT-System with CANoe Options -> Extensions -> VT System -> VT System enabled and check if the set network adapter is the used.

Error 2
System	VT System: No modules found!
System	VT System: Error occurred while starting measurement
System	VT System: --> Please connect more slaves or remove modules.
System	VT System: --> Too few connected slave for the number of loaded modules.

Meaning of Error 2
This error is shown if the VT System can not be reached. Check the network connection and the setting of the network adapter.

Error 3
The sample configuration starts without error messages, but there is no signal shown in the window "Grafik". The window "Trace" show the message:
ECUSIM    SV:   SensorError   Rx    ErrorCode   Frame missing  Frame missing         

Meaning of Error 3
No data are received from the ECU. Check if the signal lines are connected as descriped in "Setting up the Hardware"

Description of the CAPL program
The definition of the signal "RollingCounter" for the simulated sensor creates a systemvariable RollingCounter_Stim. This systemvariable can be used to set data with the CAPL-command QueueValues(). These queued values will be transmitted via the SENT protocol. Using this command an array of values is set, not a single value. The data buffer of the systemvariable RollingCounter_Stim is filled at the starting of the program. A Timer is called cyclic to refill the data buffer of the systemvariable. Therefor the data buffer of the systemvarialble is always filled and the data will be transfered continous.